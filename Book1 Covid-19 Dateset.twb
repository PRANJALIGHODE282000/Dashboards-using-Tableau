<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <CascadingFiltersHamburgerUI />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='covid_19_data (covid_19_data)' inline='true' name='federated.0nsb6ru152hwhx1fymot0194rqkm' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_data' name='excel-direct.15713gf15kk9jy1979bok10almo3'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='C:/Users/Hp/Downloads/covid_19_data.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.15713gf15kk9jy1979bok10almo3' name='covid_19_data' table='[covid_19_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:1' header='yes' lost='0' outcome='1' processed='45615'>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.15713gf15kk9jy1979bok10almo3' name='covid_19_data' table='[covid_19_data$]' type='table'>
          <columns gridOrigin='A1:H10001:no:A1:H10001:1' header='yes' lost='0' outcome='1' processed='45615'>
            <column datatype='integer' name='SNo' ordinal='0' />
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='ObservationDate' ordinal='1' />
            <column datatype='string' name='Province/State' ordinal='2' />
            <column datatype='string' name='Country/Region' ordinal='3' />
            <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
            <column datatype='integer' name='Confirmed' ordinal='5' />
            <column datatype='integer' name='Deaths' ordinal='6' />
            <column datatype='integer' name='Recovered' ordinal='7' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:H10001:no:A1:H10001:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>45615</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SNo</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SNo]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>SNo</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ObservationDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[ObservationDate]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>ObservationDate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Province/State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Province/State]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Province/State</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Last Update</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Last Update]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Last Update</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Confirmed]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Confirmed</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Deaths]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Recovered]</local-name>
            <parent-name>[covid_19_data]</parent-name>
            <remote-alias>Recovered</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='None' datatype='integer' name='[Confirmed (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Confirmed]' peg='0' size='41835' />
      </column>
      <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Indian States Groups' datatype='string' name='[Indian States Group]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Province/State]' new-bin='true'>
          <bin default-name='true' value='&quot;Andaman and Nicobar Islands, Andhra Pradesh, Assam and 30 more&quot;'>
            <value>&quot;Andaman and Nicobar Islands&quot;</value>
            <value>&quot;Andhra Pradesh&quot;</value>
            <value>&quot;Assam&quot;</value>
            <value>&quot;Bihar&quot;</value>
            <value>&quot;Chandigarh&quot;</value>
            <value>&quot;Chhattisgarh&quot;</value>
            <value>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</value>
            <value>&quot;Delhi&quot;</value>
            <value>&quot;Goa&quot;</value>
            <value>&quot;Gujarat&quot;</value>
            <value>&quot;Haryana&quot;</value>
            <value>&quot;Himachal Pradesh&quot;</value>
            <value>&quot;Jammu and Kashmir&quot;</value>
            <value>&quot;Jharkhand&quot;</value>
            <value>&quot;Karnataka&quot;</value>
            <value>&quot;Kerala&quot;</value>
            <value>&quot;Ladakh&quot;</value>
            <value>&quot;Lakshadweep&quot;</value>
            <value>&quot;Madhya Pradesh&quot;</value>
            <value>&quot;Manipur&quot;</value>
            <value>&quot;Meghalaya&quot;</value>
            <value>&quot;Mizoram&quot;</value>
            <value>&quot;Nagaland&quot;</value>
            <value>&quot;Odisha&quot;</value>
            <value>&quot;Puducherry&quot;</value>
            <value>&quot;Punjab&quot;</value>
            <value>&quot;Sikkim&quot;</value>
            <value>&quot;Tamil Nadu&quot;</value>
            <value>&quot;Telangana&quot;</value>
            <value>&quot;Tripura&quot;</value>
            <value>&quot;Uttar Pradesh&quot;</value>
            <value>&quot;Uttarakhand&quot;</value>
            <value>&quot;West Bengal&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='None' datatype='integer' name='[Recovered (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='4' formula='[Recovered]' peg='0' size='97002' />
      </column>
      <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
      <column caption='S No' datatype='integer' name='[SNo]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_data' datatype='table' name='[__tableau_internal_object_id__].[covid!19!data_57D3730B58914D1281DA0813241CE9B6]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='Country/Region, Province/State'>
          <field>[Province/State]</field>
          <field>[Country/Region]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-hidden-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Indian States Group]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Akita&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Aomori&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Azad Jammu and Kashmir&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Blekinge&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Campania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chechen Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Colima&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Extremadura&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fujian&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Groningen&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Heilongjiang&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jewish Autonomous Okrug&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kemerovo Oblast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Krasnodar Krai&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Limburg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maharashtra&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metropolitana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morelos&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Okinawa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pskov Oblast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saitama&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saratoga County, NY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sinaloa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Suffolk County, NY&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tocantins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Udmurt Republic&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Varmland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Voronezh Oblast&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Yamagata&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%null%</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ancash&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ashland, NE&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgorod Oblast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Buryatia Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chongqing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cusco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;East Flanders&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fort Bend County, TX&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gilgit-Baltistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hainaut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hubei&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iwate&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kalmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;King County, WA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lambayeque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Macau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Molise&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Navarra&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;None&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nunavut&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ostergotland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Polk County, GA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Quintana Roo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saarland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Santa Catarina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Shanxi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Spartanburg County, SC&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tempe, AZ&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tula Oblast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Unknown Location, MA&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zaporizhia Oblast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Acre&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anhui&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Atlantico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berkshire County, MA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Caldas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clark County, NV&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Davidson County, TN&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Emilia-Romagna&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fresno County, CA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grand Princess&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Harris County, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hunan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jefferson County, KY&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kanagawa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Klamath County, OR&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Liaoning&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madrid&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montgomery County, TX&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norfolk County, MA&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pais Vasco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Primorsky Krai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Repatriated Travellers&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saga&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Santa Rosa County, FL&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Shimane&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Stavropol Krai&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Thuringen&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tver Oblast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Utrecht&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Volgograd Oblast&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zuid-Holland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Araucania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baja California Sur&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boyaca&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Capital District&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chernivtsi Oblast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Contra Costa County, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Distrito Federal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Falkland Islands (Malvinas)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fulton County, GA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guanajuato&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hidalgo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inner Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Johnson County, IA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Khakassia Republic&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kurgan Oblast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loreto&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maranhao&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Middlesex County, MA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Murmansk Oblast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Northern Territory&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pernambuco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Puno&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Riverside County, CA&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;San Andres y Providencia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Schleswig-Holstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Smolensk Oblast&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tabasco&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tolima&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Umatilla, OR&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vastra Gotaland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Yaroslavl Oblast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Apurimac&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Baden-Wurttemberg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bolivar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Campeche&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chelyabinsk Oblast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Collin County, TX&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Denver County, CO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fairfax County, VA&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fukui&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Henan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jiangsu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Krasnoyarsk Krai&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lipetsk Oblast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Moscow&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;North Ossetia - Alania Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Puebla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Rio Grande do Norte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sakha (Yakutiya) Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saratov Oblast&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sindh&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Summit County, CO&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tochigi&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Vasterbotten&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Wakayama&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yamaguchi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Adygea Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antioquia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Australian Capital Territory&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Calgary, Alberta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Charleston County, SC&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clark County, WA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Davis County, UT&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Friesland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Grand Princess Cruise Ship&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Harrison County, KY&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hyogo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jefferson County, WA&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kochi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liege&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Magadan Oblast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mecklenburg-Vorpommern&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Norrbotten&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oita&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Para&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Prince Edward Island&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Santander&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Shizuoka&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Stockholm&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tianjin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tyumen Oblast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Valle d&apos;Aosta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vologda Oblast&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Wuhan Evacuee&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bayern&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Catalonia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chihuahua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cundinamarca&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Drenthe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gunma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Huancavelica&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ivano-Frankivsk Oblast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kagoshima&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Kiev&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lackland, TX&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Miyagi&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Narino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ningxia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nuble&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Orenburg Oblast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Placer County, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queretaro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Rostov Oblast&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Martin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Shandong&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tasmania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Travis, CA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States Virgin Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Victoria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wayne County, PA&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zacatecas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot; Montreal, QC&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andalusia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Astrakhan Oblast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bennington County, VT&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;C. Valenciana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ceara&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chukotka Autonomous Okrug&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Dadar Nagar Haveli&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Edmonton, Alberta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Goias&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Halland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Hudson County, NJ&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jackson County, OR&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kalmykia Republic&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kirov Oblast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lazio&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Madera County, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mato Grosso&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Nayarit&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Noord-Brabant&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oaxaca&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Overijssel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Poltava Oblast&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rajasthan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sachsen&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Santa Clara County, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Shasta County, CA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Spokane County, WA&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tulsa County, OK&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uppsala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Virgin Islands, U.S.&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Westchester County, NY&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zeeland&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Amapa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Basilicata&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Castilla - La Mancha&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crimea Republic*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Douglas County, NE&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Flemish Brabant&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gelderland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guerrero&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Islamabad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kabardino-Balkarian Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Khmelnytskyi Oblast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;La Libertad&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marion County, IN&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Namur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Niedersachsen&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Novgorod Oblast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pinal County, AZ&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Queens County, NY&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rondonia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Francisco County, CA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sevastopol*&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sormland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tambov Oblast&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tottori&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Unassigned Location, WA&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Washington, D.C.&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yunnan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Aguascalientes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antofagasta&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ayacucho&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Charlotte County, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Coahuila&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Espirito Santo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Friuli Venezia Giulia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grant County, WA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ibaraki&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jefferson Parish, LA&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Karachay-Cherkess Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Komi Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Liguria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Magallanes&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Melilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Moquegua&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Norte de Santander&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Okaloosa County, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraiba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Providence County, RI&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rheinland-Pfalz&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sao Paulo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sichuan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Sucre&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tibet&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tyva Republic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Valle del Cauca&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Volusia County, FL&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Arequipa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Baleares&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Brandenburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Caqueta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cherokee County, GA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cook County, IL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dnipropetrovsk Oblast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Faroe Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Galicia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guangdong&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hillsborough, FL&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Johnson County, KS&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Khanty-Mansi Autonomous Okrug&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kursk Oblast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Los Angeles, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marche&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mie&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mykolaiv Oblast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;New York City, NY&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Northwest Territories&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orange County, CA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Piaui&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Putumayo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rivne Oblast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Antonio, TX&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Scotland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Snohomish County, WA&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tacna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tomsk Oblast&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Umbria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vaupes&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Walloon Brabant&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Yolo County, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Altai Krai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Arica y Parinacota&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Balochistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bremen&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Carver County, MN&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chiapas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Coquimbo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Donetsk Oblast&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fayette County, KY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gansu&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guangxi&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hiroshima&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irkutsk Oblast&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jonkoping&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kharkiv Oblast&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyoto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Los Lagos&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mari El Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Minas Gerais&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nagano&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New York County, NY&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norwell County, MA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Orange, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Piemonte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qinghai&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockingham County, NH&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Benito, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Seattle, WA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sonoma County, CA&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Toronto, ON&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Unassigned Location (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Veneto&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Yucatan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Amazonas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arkhangelsk Oblast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bavaria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Broward County, FL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Castilla y Leon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chicago, IL&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Douglas County, OR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Flevoland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guizhou&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Honolulu County, HI&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kagawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Khyber Pakhtunkhwa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;La Rioja&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luhansk Oblast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marion County, OR&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nara&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niigata&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Novosibirsk Oblast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Orel Oblast&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Piura&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queensland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Roraima&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Luis Potosi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Shaanxi&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Australia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tarapaca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Toyama&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vichada&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Washoe County, NV&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zabaykalsky Krai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Amur Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Arunachal Pradesh&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beijing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bryansk Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cauca&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Choco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Durango&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Floyd County, GA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gifu&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hainan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Huanuco&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ivanovo Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kaliningrad Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kiev Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lackland, TX (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lviv Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Miyazaki&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nassau County, NY&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nizhny Novgorod Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nuevo Leon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Osaka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plymouth County, MA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quindio&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ryazan Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Mateo, CA&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shanghai&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tatarstan Republic&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Travis, CA (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vinnytsia Oblast&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;West Flanders&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Zakarpattia Oblast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Alagoas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aragon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bonaire, Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Canarias&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cherkasy Oblast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Diamond Princess cruise ship&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fairfield County, CT&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fukuoka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guainia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hendricks County, IN&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jiangxi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kershaw County, SC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kronoberg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lombardia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Manatee County, FL&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moscow Oblast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Northern Ireland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Omaha, NE (From Diamond Princess)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Penza Oblast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rio Grande do Sul&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sakhalin Oblast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sardegna&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sumy Oblast&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tokushima&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ulster County, NY&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vasternorrland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wake County, NC&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yamalo-Nenets Autonomous Okrug&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aichi&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antwerp&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aysen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Biobio&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Callao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chatham County, NC&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cobb County, GA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware County, PA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;External territories&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;From Diamond Princess&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hebei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jervis Bay Territory&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Karelia Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kostroma Oblast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Magdalena&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Meta&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mordovia Republic&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Okayama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Parana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Providence, RI&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sarasota, FL&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sicilia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk County, MA&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tlaxcala&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ucayali&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Valparaiso&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Volyn Oblast&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Xinjiang&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot; Norfolk County, MA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Andaman and Nicobar Islands, Andhra Pradesh, Assam and 30 more&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asturias&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bergen County, NJ&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cajamarca&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cesar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chuvashia Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dagestan Republic&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ehime&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gotland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hamburg&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Huila&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;india &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jalisco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kaluga Oblast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kirovohrad Oblast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lee County, FL&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Madison, WI&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mato Grosso do Sul&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Montgomery County, MD&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Noord-Holland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Odessa Oblast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;P.A. Bolzano&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Port Quarantine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ramsey County, MN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sachsen-Anhalt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Santa Clara, CA&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Shelby County, TN&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St Martin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ternopil Oblast&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tumbes&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Australia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Zhejiang&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Altai Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bashkortostan Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Casanare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chiba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cordoba&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Douglas County, CO&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fench Guiana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gavleborg&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guaviare&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hokkaido&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ishikawa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Junin&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kherson Oblast&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;La Guajira&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Los Rios&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Maricopa County, AZ&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nagasaki&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Newfoundland and Labrador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nova Scotia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Orebro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Pierce County, WA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rockland County, NY&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Diego County, CA&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sergipe&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sonora&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tamaulipas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Toscana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Unassigned Location, VT&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Veracruz&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Washington County, OR&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Yukon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Alameda County, CA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Arauca&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Baja California&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boston, MA&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cantabria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chernihiv Oblast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Falkland Islands (Islas Malvinas)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Fukushima&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hessen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ingushetia Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Jilin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Khabarovsk Krai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kumamoto&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;London, ON&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Manitoba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Michoacan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murcia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New South Wales&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Omsk Oblast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Perm Krai&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Puglia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Risaralda&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samara Oblast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saskatchewan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Skane&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sverdlovsk Oblast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tokyo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ulyanovsk Oblast&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vastmanland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Wales&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Yamanashi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Abruzzo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Atacama&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Berkeley, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Calabria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ceuta&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ciudad de Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dalarna&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Paso County, CO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grafton County, NH&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Harford County, MD&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Humboldt County, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamtland Harjedalen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kamchatka Krai&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kittitas County, WA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Leningrad Oblast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Madre de Dios&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maule&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Montgomery County, PA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nenets Autonomous Okrug&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nordrhein-Westfalen&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;OHiggins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;P.A. Trento&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Portland, OR&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Recovered&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sacramento County, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Santa Cruz County, CA&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Shiga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St. Louis County, MO&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vladimir Oblast&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Williamson County, TN&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zhytomyr Oblast&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_data' id='covid!19!data_57D3730B58914D1281DA0813241CE9B6'>
            <properties context=''>
              <relation connection='excel-direct.15713gf15kk9jy1979bok10almo3' name='covid_19_data' table='[covid_19_data$]' type='table'>
                <columns gridOrigin='A1:H10001:no:A1:H10001:1' header='yes' lost='0' outcome='1' processed='45615'>
                  <column datatype='integer' name='SNo' ordinal='0' />
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='ObservationDate' ordinal='1' />
                  <column datatype='string' name='Province/State' ordinal='2' />
                  <column datatype='string' name='Country/Region' ordinal='3' />
                  <column datatype='datetime' date-parse-format='MM/dd/yyyy HH:mm|#|#|yyyy-MM-dd&apos;T&apos;HH:mm:ss' name='Last Update' ordinal='4' />
                  <column datatype='integer' name='Confirmed' ordinal='5' />
                  <column datatype='integer' name='Deaths' ordinal='6' />
                  <column datatype='integer' name='Recovered' ordinal='7' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name=' Confirmed cases for India'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Count' name='[cnt:Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Confirmed:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</column>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Recovered:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#005500</color>
                <color>#086108</color>
                <color>#136d13</color>
                <color>#207920</color>
                <color>#308530</color>
                <color>#419141</color>
                <color>#559d55</color>
                <color>#6ba96b</color>
                <color>#83b583</color>
                <color>#9dc19d</color>
                <color>#bacdba</color>
                <color>#d9d9d9</color>
                <color>#d4c1c1</color>
                <color>#d0aaaa</color>
                <color>#cc9494</color>
                <color>#c77f7f</color>
                <color>#c36a6a</color>
                <color>#bf5656</color>
                <color>#bb4444</color>
                <color>#b63131</color>
                <color>#b22020</color>
                <color>#ae0f0f</color>
                <color>#aa0000</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Multiple Values]' />
              <lod column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</rows>
        <cols>[federated.0nsb6ru152hwhx1fymot0194rqkm].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{B2111E67-0A5B-4790-8A78-17034C6A1F9F}' />
    </worksheet>
    <worksheet name='Conformed cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Count' name='[cnt:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]' field-type='quantitative' max='11167375.66708295' min='-10063295.577980828' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Latitude (generated)]' field-type='quantitative' max='37148366.555442192' min='-29838060.286938637' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Confirmed:qk]' reverse='true' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ff0000</color>
                <color>#fb1616</color>
                <color>#f82d2d</color>
                <color>#f44242</color>
                <color>#f15757</color>
                <color>#ed6c6c</color>
                <color>#ea7f7f</color>
                <color>#e69292</color>
                <color>#e3a5a5</color>
                <color>#dfb7b7</color>
                <color>#dcc8c8</color>
                <color>#d9d9d9</color>
                <color>#bacdba</color>
                <color>#9dc19d</color>
                <color>#83b583</color>
                <color>#6ba96b</color>
                <color>#559d55</color>
                <color>#419141</color>
                <color>#308530</color>
                <color>#217921</color>
                <color>#136d13</color>
                <color>#086108</color>
                <color>#005500</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' />
              <color column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Confirmed:qk]' />
              <geometry column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[Latitude (generated)]</rows>
        <cols>[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{08CD2D8B-6818-4409-BC36-37C53DBD4A26}' />
    </worksheet>
    <worksheet name='Forcast of C-19 Presence'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column caption='Observation Date' datatype='date' name='[ObservationDate]' role='dimension' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' forecast-column-base='[sum:Confirmed:qk]' forecast-column-type='forecast-value' name='[fVal:sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ObservationDate]' derivation='Year-Trunc' name='[tyr:ObservationDate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Forecast Indicator:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[fVal:sum:Confirmed:qk]</rows>
        <cols>[federated.0nsb6ru152hwhx1fymot0194rqkm].[tyr:ObservationDate:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{900A9930-AFCB-4E68-B4BC-2F1068D1AE9F}' />
    </worksheet>
    <worksheet name='Recovered cases in india'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <size column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' />
              <text column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' />
              <text column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' />
              <text column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' />
              <color column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{516D1FA3-C2BB-4C70-8A4F-5F939E1CDC95}' />
    </worksheet>
    <worksheet name='Recovered cases in india1'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Province/State]' derivation='None' name='[none:Province/State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Recovered]' derivation='Sum' name='[sum:Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' />
              <wedge-size column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' />
              <size column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' />
              <text column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' />
              <text column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' />
              <lod column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8790607452392578' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{6D198D8E-17E1-47E0-A3A1-D8BBB6B4C6F6}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{8697CBCA-4726-4365-948F-EDE9E64B4400}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{843E7CB5-4C0E-4A1B-A661-DA6AA08A7C5A}' />
    </worksheet>
    <worksheet name='Sheet 12'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{08793F5D-2FF1-41FC-AF28-0DE2A1672482}' />
    </worksheet>
    <worksheet name='Sheet 7 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Graphs</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column caption='Indian States Groups' datatype='string' name='[Indian States Group]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Province/State]' new-bin='true'>
                <bin default-name='true' value='&quot;Andaman and Nicobar Islands, Andhra Pradesh, Assam and 30 more&quot;'>
                  <value>&quot;Andaman and Nicobar Islands&quot;</value>
                  <value>&quot;Andhra Pradesh&quot;</value>
                  <value>&quot;Assam&quot;</value>
                  <value>&quot;Bihar&quot;</value>
                  <value>&quot;Chandigarh&quot;</value>
                  <value>&quot;Chhattisgarh&quot;</value>
                  <value>&quot;Dadra and Nagar Haveli and Daman and Diu&quot;</value>
                  <value>&quot;Delhi&quot;</value>
                  <value>&quot;Goa&quot;</value>
                  <value>&quot;Gujarat&quot;</value>
                  <value>&quot;Haryana&quot;</value>
                  <value>&quot;Himachal Pradesh&quot;</value>
                  <value>&quot;Jammu and Kashmir&quot;</value>
                  <value>&quot;Jharkhand&quot;</value>
                  <value>&quot;Karnataka&quot;</value>
                  <value>&quot;Kerala&quot;</value>
                  <value>&quot;Ladakh&quot;</value>
                  <value>&quot;Lakshadweep&quot;</value>
                  <value>&quot;Madhya Pradesh&quot;</value>
                  <value>&quot;Manipur&quot;</value>
                  <value>&quot;Meghalaya&quot;</value>
                  <value>&quot;Mizoram&quot;</value>
                  <value>&quot;Nagaland&quot;</value>
                  <value>&quot;Odisha&quot;</value>
                  <value>&quot;Puducherry&quot;</value>
                  <value>&quot;Punjab&quot;</value>
                  <value>&quot;Sikkim&quot;</value>
                  <value>&quot;Tamil Nadu&quot;</value>
                  <value>&quot;Telangana&quot;</value>
                  <value>&quot;Tripura&quot;</value>
                  <value>&quot;Uttar Pradesh&quot;</value>
                  <value>&quot;Uttarakhand&quot;</value>
                  <value>&quot;West Bengal&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Province/State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Latitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[Latitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]' field-type='quantitative' max='36745116.609612748' min='12921200.468298733' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Latitude (generated)]' field-type='quantitative' max='10226406.306165785' min='-2836851.084373164' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Province/State]' value='false' />
            <format attr='break-on-special' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Province/State]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Province/State]' value='false' />
            <format attr='omit-on-special' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]' value='false' />
            <format attr='break-on-special' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]' value='false' />
            <format attr='show-null-value-warning' field='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[Indian States Group]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[Latitude (generated)]</rows>
        <cols>[federated.0nsb6ru152hwhx1fymot0194rqkm].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{88350949-7627-4CCB-81E3-43B51B09CC15}' />
    </worksheet>
    <worksheet name='Trend Line'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='datetime' name='[Last Update]' role='dimension' type='ordinal' />
            <column-instance column='[Last Update]' derivation='Month' name='[mn:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Last Update]' derivation='Quarter' name='[qr:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Update]' derivation='Year' name='[yr:Last Update:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Confirmed:qk]</rows>
        <cols>([federated.0nsb6ru152hwhx1fymot0194rqkm].[yr:Last Update:ok] / ([federated.0nsb6ru152hwhx1fymot0194rqkm].[qr:Last Update:ok] / [federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]))</cols>
      </table>
      <simple-id uuid='{1E422E80-F372-4B5D-A43B-00C39AF1B039}' />
    </worksheet>
    <worksheet name='Trend Line (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[Last Update]' role='dimension' type='ordinal' />
            <column-instance column='[Last Update]' derivation='Month' name='[mn:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Update]' derivation='Quarter' name='[qr:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Update]' derivation='Year' name='[yr:Last Update:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]'>
            <groupfilter function='except' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Country/Region:nk]' />
              <groupfilter function='member' level='[none:Country/Region:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Confirmed:qk]</rows>
        <cols>([federated.0nsb6ru152hwhx1fymot0194rqkm].[yr:Last Update:ok] / ([federated.0nsb6ru152hwhx1fymot0194rqkm].[qr:Last Update:ok] / [federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]))</cols>
      </table>
      <simple-id uuid='{FE2AF0A7-FB73-4D0D-9A23-E35678E12205}' />
    </worksheet>
    <worksheet name='Trend Line for India'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
            <column datatype='integer' name='[Confirmed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='datetime' name='[Last Update]' role='dimension' type='ordinal' />
            <column-instance column='[Last Update]' derivation='Month' name='[mn:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Last Update]' derivation='Quarter' name='[qr:Last Update:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Confirmed]' derivation='Sum' name='[sum:Confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Last Update]' derivation='Year' name='[yr:Last Update:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]'>
            <groupfilter function='member' level='[none:Country/Region:nk]' member='&quot;India&quot;' user:ui-domain='cascading' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Confirmed:qk]</rows>
        <cols>([federated.0nsb6ru152hwhx1fymot0194rqkm].[yr:Last Update:ok] / ([federated.0nsb6ru152hwhx1fymot0194rqkm].[qr:Last Update:ok] / [federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]))</cols>
      </table>
      <simple-id uuid='{1C34FF75-EA92-46C7-AED7-2EFEA5EA4100}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='covid_19_data (covid_19_data)' name='federated.0nsb6ru152hwhx1fymot0194rqkm' />
      </datasources>
      <datasource-dependencies datasource='federated.0nsb6ru152hwhx1fymot0194rqkm'>
        <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
        <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='25' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='23' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='7' param='horz' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='5' type-v2='layout-basic' w='82400' x='800' y='1000'>
                  <zone h='98000' id='3' name='Conformed cases' w='24102' x='59098' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='32377' id='9' name=' Confirmed cases for India' w='58298' x='800' y='66623'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='27248' id='10' name='Recovered cases in india' w='58298' x='800' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='9500' id='12' name='Trend Line' w='58298' x='800' y='28248'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28875' id='13' name='Trend Line (2)' w='25798' x='33300' y='37748'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28875' id='15' name='Trend Line for India' w='18925' x='14375' y='37748'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28875' id='18' name='Forcast of C-19 Presence' w='13575' x='800' y='37748'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
                <zone fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='16000' x='83200' y='1000'>
                  <zone h='8125' id='8' name='Conformed cases' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Confirmed:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25291' id='11' name='Recovered cases in india' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' type-v2='color' w='16000' x='83200' y='9125'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25291' id='14' name='Trend Line (2)' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]' type-v2='color' w='16000' x='83200' y='34416'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='25291' id='16' name='Trend Line for India' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='59707'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='5750' id='17' name='Trend Line for India' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' type-v2='color' w='16000' x='83200' y='84998'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='8252' id='19' name='Forcast of C-19 Presence' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Forecast Indicator:nk]' type-v2='color' w='16000' x='83200' y='90748'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1950' minheight='1950' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='27' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='26' param='vert' type-v2='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='210' h='27248' id='10' is-fixed='true' name='Recovered cases in india' w='58298' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25291' id='11' name='Recovered cases in india' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' type-v2='color' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Conformed cases' w='24102' x='59098' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8125' id='8' name='Conformed cases' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Confirmed:qk]' type-v2='color' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='68' h='9500' id='12' is-fixed='true' name='Trend Line' w='58298' x='800' y='28248'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='28875' id='18' is-fixed='true' name='Forcast of C-19 Presence' w='13575' x='800' y='37748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8252' id='19' name='Forcast of C-19 Presence' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Forecast Indicator:nk]' type-v2='color' w='16000' x='83200' y='90748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25291' id='16' mode='checkdropdown' name='Trend Line for India' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' type-v2='filter' values='cascading' w='16000' x='83200' y='59707'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='28875' id='15' is-fixed='true' name='Trend Line for India' w='18925' x='14375' y='37748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5750' id='17' name='Trend Line for India' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' type-v2='color' w='16000' x='83200' y='84998'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='223' h='28875' id='13' is-fixed='true' name='Trend Line (2)' w='25798' x='33300' y='37748'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='25291' id='14' name='Trend Line (2)' pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]' type-v2='color' w='16000' x='83200' y='34416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='251' h='32377' id='9' is-fixed='true' name=' Confirmed cases for India' w='58298' x='800' y='66623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{1FC7A7D5-C06E-46FD-8525-5EA07BA105BC}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Conformed cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[cnt:Confirmed:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0A46A5DA-4F6E-4D56-9D4B-D93F872DAD93}' />
    </window>
    <window class='worksheet' name=' Confirmed cases for India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{78E9F030-69C1-422F-A3E5-A78BCD6E9C95}' />
    </window>
    <window class='worksheet' name='Recovered cases in india'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{6692F41C-9D57-427C-8C53-96EDC623FE35}' />
    </window>
    <window class='worksheet' name='Recovered cases in india1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Province/State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[sum:Recovered:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <simple-id uuid='{5FF009B2-0903-412F-833A-480E7B678D16}' />
    </window>
    <window class='worksheet' name='Trend Line'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{01A64E28-9977-401A-988E-A45BF316DAF1}' />
    </window>
    <window class='worksheet' name='Trend Line (2)'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[mn:Last Update:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C3042CF6-1836-4EAF-8706-2907B68385B5}' />
    </window>
    <window class='worksheet' name='Trend Line for India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' type='filter' values='cascading' />
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Country/Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8A2F9BFF-1AEF-4783-BCA8-389F20B108D4}' />
    </window>
    <window class='worksheet' name='Forcast of C-19 Presence'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0nsb6ru152hwhx1fymot0194rqkm].[none:ObservationDate:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{322872AF-FFC1-45B8-8DBD-5AD99A431F4D}' />
    </window>
    <window class='worksheet' name='Sheet 7 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <map-scale-visibility value='0' />
      </viewpoint>
      <simple-id uuid='{2BD97807-DE85-4F05-99E5-C476C6901D1A}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name=' Confirmed cases for India' />
        <viewpoint name='Conformed cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Forcast of C-19 Presence'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Recovered cases in india' />
        <viewpoint name='Trend Line'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend Line (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend Line for India'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{9FA90215-F72E-4CA1-9C8C-FE950998A347}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{912AC9A8-2799-40F8-988C-C78F36E7DC4D}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{36828BB9-789A-4AE5-B851-0F6434E0C874}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 12'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EC6F0B1A-A77F-481F-A039-99AA41722E14}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='64' name=' Confirmed cases for India' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Conformed cases' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Forcast of C-19 Presence' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recovered cases in india' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9d5Bc13Xu+zuxc5ycZzCYQQZBkABzlESRClSwpecg2bJdTtd21XWV3022
      q3zfc9V1vvUcdO0rWfaV5aBoJUoiJVHMBEESRE4DYHLq6ZnO6aT9/ugBMANM6O6ZQRK+KlRh
      us/Z+3T3WnuvvcK3JCGE4DZu48cU6vV+gNu4NlhpnZMk6Ro+yY2F2wpwC0MIQXJ8ltjABInR
      GbLxNKVMAcuwkGQJ3evCGwkQaolQ191EU38bqlv7sVII6bYJdOvByJcYefscg2+cIZ/IVnyf
      rMi07Ohk031biXQ0/Fgowm0FuIXg2A7Dbw5w+oeHMfKlNY3VvLWdXR/YjzfiX6enuzFxWwFu
      EeQTWd7599eJn59ctzFVt8YdT99L2+7uW3Y3uK0AtwASY3EO/vMLFNP5DRl/88M72f6eO5Hk
      W08JbivATY7EWJzX//EHmAVjQ+fpuXcru96/75ZTAvl6P8Bt1I7cbIY3vvCjDRd+gMEDpxl4
      +fiK7tSbEbcV4CaFbdkc+uqrlDKFazbn6R8cJj44dc3muxa4rQA3KS68fpq54dg1nVM4gqPf
      eAOrZF7TeTcStxXgJkQpW2DgxWPXZe5sPM3gG2euy9wbgdsKcBPiwoEz18TuX3b+107dMrvA
      bQW4yWAZFiNvDVzXZyhmCkycGLmuz7BeuK0ANxlmB6cp1nDwVTQVRVMu/a373KhurebnGD82
      eEt4hG4nw91kmKkx0qvoCt6wH3fAQyGdxxv2kZlJE93RQGIsTmY6WdV4c8MzWIaF5qpdiW4E
      3N4BbjIkRmdqus+xHaySSWpyDkmWMItlG77W6LFVMsnGUjXdeyPh9g5wE8G2bHJzmZrutYom
      2XmhL6QuC312pnYhzswkiXTU13z/jYDbO8BNBKtkYhnWiteoLq1s6y+TsaC6NcLtVwutoqsr
      /r0UiulrF4TbKNzeAW4iOLaDsJ0Vr/HXBzGLBuHWOox8Ccu0kGWJYqaAoqlYholj20Q7GzAL
      Bq75M0GgIUQ+kUUIge5xzc9nkxiNLzuXvYoy3gy4vQNcBwjHwTINCtk02UScfDqJbZkIsbJw
      S5IEq6QlK5qCvyFEIZWjmC0gyxLRrkZCLVFycxlkWUaW5Uu7ScOmZvx1QYQQ1HU34Q35CLfX
      YRnmpXPC8g9U7Se/8XB7B7gGEEJgFPKMnjrMxLmTzIwOkpmbwbEvr6CKqhKoa6ShYxPtW3fT
      3r8TzeVZNI6iKsiqjGPZy841O3R1esTC17Lx9KL3Tv3g8FXXT58dr+hz6V5XRdfdyLitABsI
      IQS5VILjL32XgbdewSwVl73WtiyS0xMkpycYeOsVdI+XLfsfYdcjT+H2BYCy/a57XVirrcyA
      O+ABSULV1bL5oyr4G0Nk42k0l4YQYJsWxXQef0MQI2/gjfjIxtN4Qz7SFbhFb4Vqsdsm0AbB
      Nk2O/Ojb/Ptf/C4nX/3BisK/FIxCnmMvfpdv/80fMn62nIYsSRLBxnBF99dtakZ1aYTb6kCS
      KOWKmPkS/mgAX30QJPBFAyi6Sri1DkkCl8+N5tZRdLWivP9AU2XPciPjtgJsAPLpJM/9w19w
      6NmvVS34VyI9G+O5z/0Fb33vKzi2Rf2m5oruM7JFfBE/ZtEk2BRGnV/1BeXid82loegKmksr
      X9McQVYVgs2RS9euBE/YhyfkW9NnuxFw2wRaZ6Tj0zz7939OZq62gNVSEEJw7IXvkIlPc+dj
      H0eSJYSzsoQujBhrbh3btMjEFps1kiyhujSmz4xV/UxN/W0oqrL6hTc4bivAOiKfTvDc5/5i
      XYV/IYaOv42saoRa20mOzVZ8n1lcOnNUOKK2rFIJOu7srf6+GxC3TaB1gm2ZvPTFz5Ke3dgi
      lQuHD1Bwrm8mZrSzkXB73XV9hvXCbQVYBwghOPnqD5g4d/KazDc59jaOsjEMEKtCgq3vugNZ
      Xj/REUIgHAfHca55hultE2gdkEvNceT5b1+z+YRjk7MGCMh3lE+11xBtu7orPogvB+E4JGOT
      TJw7QXxsiPRsDKOQw3EcVE3HF4oQbemgsbuPlk1bUXXXhvES3VaAdcCJV76PUby2K7JhJwh0
      amRGr11lljcaKFOj1CiMZqnI+Xde5/QbLzA3sbwZl5gaY+xMueRT93jp3nkXOx9+klBDy7or
      wm1eoDWiVMjx1T/9rxRztWVprgVd2+8ioO5g8uTohs+lujX2vP9eFEnGyJaQFRl32Euwsw7N
      p68omEIIRk8d5o1v/WvNDgJZUei760Hueu9P4PYHav0YV+G2AqwRQ8fe4vkv/E1V9wSi9WST
      c0hIIEEg2kA+k8KxTGyr8gQzze3ho7/9Pzjy7weZObd+lIhXQlYU2jd3omv6Ve9Jikz9thYa
      drQtGTyzDIPXv/kFBt58hfWw13zhKI/81K/S1N23LrvB7UPwGlHLwVdRdZq6+2nu3UpL7zZ8
      4Trq27rY+chTqHrl+TVmscDsxAXu+cRjdO7dGLek7nXR2t2+pPADCNth5vg4k28NXXWALeaz
      PPe5v2DgzZdZr8NKLjnHs5/9MwaPHlyXA/PtM8AaIIRgZuR81fcVsmkK2XJSWrCukVIhh5j3
      gDjO8oluSyE+Nkjn9jvZ89H7iXY1cvLZQ2tmhr6Ilu2dROvrKM2tfr5JnI/haw4S6iy7R02j
      xA8//1dMD55dl2dZiLLL+TOomk7Htj1r2glu7wBrgGUa5FKJqu8r5bOX/s2MXiAdnyYzN8PU
      hTM4VZhAAKmZMlObJEl03d3Ho7/5Qbru3oy8hihtuK2Oe37ucXY9tY9SovLDffzkBMIpuzQP
      fP0LGyL8F+HYNi9+8TMkpyvLXF0Ot3eANcA2japzfdz+IKqmkU0sjuQqmo6qaZTyuarGK2QX
      H749IS97PnI//Y/tZuzwBcaODpGdSa2aOqF7XdT3ttB1Vy8Nva1IskT89OQly8WyLWzbxjVv
      ouWLeVyaC0W5rGjFRB6raDA2cISBt1+t6nPUArNY4MUvfoanf/P3kZXaRPm2AqwBZZNl5SKW
      KxFpasMsFWnZvJ1iJo1lGngCIYxinmI2Q/++bZx89bmKD8MLawoWwhv20//obvoe2UU+nmTu
      +DkSx86Sn5zByhWQPW48zQ2EdvYT6e8i2Fq/iDYFwMxfTpMolIqMxcaZSyVob2zl7Oh5uls6
      KRklwoEQ7Y1tAOSTGQ5+54tcqwDF3MQIpw+8wPYH3l3T/bcVYA2QpHJ1lV2F3Z6enUbT3WTn
      ZspngUyKqNSJY9vlnl6xCSRZASpTAHWZw6mTL1A4/A75AwcpnTqFyGQIA4sSmIeBN75DPhrF
      3r4N7z378ezZg6SVqU5k9bKFLEkShmnQ1tjK1NwMiqxQMkqcHh6gIVx3SQHOvfMqueRcxd/H
      euDoi9+hf99DVTkQLuK2AqwBqqahuT3Y2cqDUReFIxmbuPTa5LlTl/4/W6VJ6w0uzsl3cjnS
      z3yH7A+fx0lVxvhgz82Rf+VV8q+8itrYSOD978P/2KN4opcLXvweH3f07QKgu6Xz0us7e7df
      +r+syQwef726D7AOyKcSDJ84RO+d91V9720FWANU3UUg2kAxm172GllRaO7ZQjY5S7Cukcnz
      p/GFIsiKgu7xkU8nCUQbmB0fRtE0Qg3N5NMpXB4vjm1RyKbJp5evzgrWl9MShBDkX32N5D//
      C3ai+oP5RVixGIl/+Ecy33uW8Kc+heZ3YWYr8yqZaob0XHXJgP5oA4V0Esex0d0e3L4A2cRs
      2bxcxrxbCoNHD7Jpz71Ve4Rue4HWiPq27hXfV1QNRdMp5jIUMmlsyyTU2ILm9qKoGo3dm8nM
      xfCGIhiFPLrbi1HM4/L6MIoFlGVMnIto6u5DGAaJz36O2b/59JqEfyGsyUnif/zHeIfeoRJ7
      XvO7MPVkRdcuhKpqtPbtoK1vBw0dvQTqGmnq6ad/38NVjTNx7hS2WX1ayG0FWCM6tu1e8X3H
      cbCMEprLTSGbxh+pIzMXR5ZlzGKBuYkRQo2tAPgj9VimgTcQwjJNXD4/trX8j+r2B4lGG5n5
      878g+8MfsmoZV7VwHJxXv4/31MtIKwi2HnDT+fAW5mLVp2QUsiliwwPMToxgmSVSsUmyiTjx
      scGqxrGMEsmZidUvvAK3TaAlIC7WDkqrd1Fv3rQVX7iOXHLpAhXbNJg8f9nGl1UVx1p8bXJ6
      AllRcWyL1EzlKQ3tvdtI/d1nKB45WvE9tUA5+w6RqB/r7neRm07jWGXPl+rVCffUU9ffjKKr
      pOPTVY+90O1byKyNajEdn151R74SP9YKIITAsWwK8Rz52QxGuoiZK2EbZY8MUplnR/XouAJu
      PHV+vA0BFJd6STFUTWfrPY/w9rNfq2jO5QJd1di7AJIs0zIYo3jsdFX31QrzwMtEtm+m7cPv
      wi6VO80v/B6EECsmBLr9QWRZRpJlHNteIOwSqq4jhENTdz/J6fFlzzxuXwCjVFj2OyzlKm8K
      fhE/lgrgWDbZyRSJ8zHyM9kVeXbKyHHpp5XAU+cn1FVHqKsO1aWx9d7HOPna8xQy1TEsrwVN
      poJ+/Np2akl+4Z9x9fejd3dd/aYQKxJ7Ccch2tZ16XDbe+d9ZGZjFLJpPP4gkxfOoLs8hBtb
      6bv7IaYHzyArKrZlIsky0ZZOUvEpYkMDyy8iVaaRwI/ZGcCxbGbPTnHumaOMvjJAdjJVgfBf
      AQGFeJapt4cZ+OZhpg4NI6Oz//0f35iHXgKarNI7nUe6xom8wjBI/NMXEEsE/yRZXjEaW8pn
      seYj59nkHDMjF8gk4tiWRTGfxbEtLLOEZRrEhs+RSydJzUyh6i5cHh/p+BSWYawo5Ks5DJbC
      j8UOIIQgO5li6u0hjApdepXAsRxmz0yRGJyhflsnPbv3M3j04LqNvxQkSWZnoBWPeX26xJRO
      nKB45CieO/dc9Z4vFF3RJTx14fKOlVmidvpiEcxCSJKEUcxjFFcn4r0yJlIJbvkdwLFsJt8a
      YuSlM+sq/IvmMGxiR8Zor7uPSH3HhsxxEbsefA+NU9eXlz/97W8vuQuEG1tWvM8TCNHY3Ue4
      qZVIczsADR2bCNY30bxpK55AiKaefpAkAtEGwk2teIJhdI+Phs7V070jTW1Vf5ZbWgHMvMHQ
      j06TOBe7JqkpRqJEb9u7CfhXFoRaIEkyux55iu0tfdixGpgnrvRmrSGFuHTqNNYSz9DU3bfi
      fZrLjaKq6C4Pyny6RT6TxOX1o7s91Lf3oKoaiqISamhBc3lQNZ1QQzNGIb/iM3uDEXyhaNWf
      5ZZVACNTZOj5UxTi1XsG1gJFcrFl0/toadvFetEnq7qL+z/6c9z91Mdqdnmqra2ojY2oTU1o
      HR24tm1FaahH6+mufjDHofD2oatebu3bseI5wCwVyyZNqYisqPgj9URbOinlc5ilIrnU3KXV
      P5OYQZZljEKeXHKWUEMT3sDyJk771l3ISvUp4LfkGcAsGAy/dAYjszZawlqhyBpdzQ/RtetO
      jh349pqSw5q6+7jvw58k2tKBcByKx0/UPJbs9YAkI+kayDJqUzNaWxvWxCSiVJ15WDpxEt7/
      vkWvBesaad28nbEzSytpIZNa5OuXFZVsotx/IB2fWvS6Y1ssNPSSsZXjI1v2P1LV81/ELacA
      juUw9to5jPT1Ef6LELaDmgzxgV/5fQZPvsHZN18mOT1BJbaYJMmEG1vYet/jbL7rAbT5LEcn
      m8WerZwRbiEWmixKKIRTyIMjsGMxhFE9O5wxOoqwLCR1sQhtf+DdjJ09VlFUernYR7UxkeZN
      W6hv767qnou4pRRACEHs2Bj52LVnaFgKVtEk9s4E2x97D9vvfzczYxeYPHeK2PA50rMxirkM
      whHIiozLGyDc2ExDZy/t/buItnQgXUE+5aTTVa/Ul7AgT8aOX+76YhVqa3PkpNMIw7hKAdrm
      83rGzx6v7TmrhCTL7H3io0hSbdb8LaUAhXiW2TNTq194DZGfyTB3Zor67a00dfXR1HX5oHiR
      De1ihHQ12NnazzOubVtBkjEGBhCAa1MP1kwcp1gsK5VdXTxElEqIJZLPJFnm3qd/hm/+9f+L
      WYHrcq3Yes+jqx6+V8ItcwgWjsPUoeH1TwhbB8ycnMBcolBdkmUUVa1I+IGqhXQhnHQGJ5/H
      9/BDuLdtQ/J40Hu60Xu6r1rFK4VY5nlCDS3c9/TP1rwqV4r69h7uft/H11QUf8vsAOnRBIW5
      6upprxUc02bmxASt+3rWNI7kWkNLIkUBy6R05gzCtBC2jZPPI7vdiCoL8QGQZSR9+cjr5rse
      oJBN89Z3v7whfJ/B+mYe/8RvXDof1YpbQgGEI5g9vXHEUOuB1FCchp1taJ7qw/UXoQRDZV94
      DQJljixNRWjna6N0lL1eJPVyl3ghBDnDIJ7LkDMMVFmmce8D7AXeefZrVR9sV0JdWxfv+uRv
      4Y+snaH6llCAwlz2hl39L8KxHFJDs9Rvqz1IJoeCyIEATnr5dAMAyePB1bcZa24OJRCgdPoM
      ri395TdVFTs+i9bWSun8BZxsFs/eOzEGh5AUGdnrA0nCOL8y35FSX4/k0nGE4HRsirdHh5lI
      J3GuUE6/y0Xk4acwDjwPhTX+RpJE/90Psv8DP43u9qx+fQW4JRQgNXxti7BrRWpklrqtzTXb
      rLLLhd7VSfHYyh4WOeBHcrlQfH5kj6ds/igqkqoge33IbjfG8Aiyz4fW1ooSDuOkUih1UZxC
      Adm3eusjV38fedPgmZPHOD+7PN9ntlQiq3mQ73uClolBuHAKy6jSkyVJ1Ld1c/eTP0nL5m3r
      SpB70yuAcATZyWuXhrwWFJN5zFwJ3e+ueQzX9u2rKoAdn8UOh7ETSRTHRm1qKpdKShKSPIdT
      KJaFPZPBODuAOTqGEo2iBEMIy8SuoJje6tvMVw8dJF5hDr6jakx09nP//keIxCc5f/gAqdjk
      8hVvkoTb56etbyd9dz9Ey6YtlTsLqsBNT45rZEsMfOvqXre1YGJmkmgogmXbaIrKaGycumAU
      VVHweX3I6+DVaLuvl3B3fc33m+PjTP6n/7Imj9BaIbxeXv7FTzBaqt7NqUgSH99zN12ROgqZ
      JImpcVLxaUq5DI5jo+lufOEo4aY2Qg3Ny9K+rBdu+h2gMLd+uT6GZXJ66CzZQg6X5kIAqWya
      4+dP8sjeBxfRgdSKQjy7JgXQ2tpw79yx4WWQK+FCf29Nwg9gC8H3z57iF/bfjzcYwRuM0Na/
      c52fsHLc9Aqwnvk+0WCEkD+ILEnMJGeRJAm/x4ckSYQDoXWZo5ReWXCEEAgrhZ0bxDHi4BhI
      ihfZ3Yri7URSPAQ/9HTZDKqSlW49IHSdUzu3XvW6YztIsnTJPndse9nktHguy8BMjG1N6581
      Wy1uegVYSN+3VgR9lxsvhPyXBb4p2rhucyzXlVEIBzt3jtL0d7Azp0Es4TZUvGjhveg978Wz
      fx+FA2+s23NViuLDD5L2XH2GSUxPo6gquWQKbyhIfHSMaGsL+VSa5t4etCtiBqdjUzeEAtz0
      kWDHrN0WLpQKTMSnSGaXP/Rl51kLHOEQT9WWiLYQjmlfFRgSVo7iyD+QH/hT7PTxpYUfwM5j
      zr5C7uwf4nuiDjnkX/q6DYLW1UX20YeWTefLJhIoqkJicgq3z0s6Hmfy/AXio1f3IZ7KpLCv
      ww52JW76HcCxa/8Si0aJ148dZN+2vXzjxWfYsWlbuXyykMWlu0jM+7UjgRDZ+SZuW7v6eP7t
      l/nU+38GtRZGYsElyhUAx0ySP/+XOIUqWp86JazSC/g+GCDzr1m4BudhORCg7jf/A+fNpU3O
      UEM9wbo6JEmiVMgjhEB3ewg3NuKPRq66vmCaOEJwpZEkHAdRLOEU8gjTRPZ6kd3uFaPOa8FN
      rwCyUvsm5tJ09m3by2xqlp62btoaWpDl8k8yGZ/C0+C5tFp73V58bi+5Qp6+jt7aw/uSdEn4
      hV2icOHT1Qn/AihtGbzvDZB/NgdrWAhWg+R2Ufdbv4ne0YE0eG7Ja1TtclRY1S+bj3pz09Jj
      LigWEkJgjo+Te/FliseOYU1PIy5mqUoSSjiM3rsJ77334rn7bmT32tIfFj33uo10naDotX8E
      r9tLZ7OXzvn61IVoijas5bGWhaIrSJKEEILS9DPY+QtrGk/f5aBG7iHzlUO1p0qvADkYpO43
      fwPP7jIxbtB9tf0/eOQYtm3Ts3tnWZiLRQSgqCqI8vmgvq0VdcEq7ne5UGQZKx4n9cUvk3vt
      taVdu0JgJxIU3nqbwltvo9TVEfrJj+J7+GGkGirArsRNrwCat/qtUQjBycEzdLd0cPTcCbb1
      bOHc6AX2br2DockRpuLTbOvZwvRcjFQ2TVdzJ163m5ODZ2iMNJDIJAj5QmiaRldzdUXwmq+8
      egkjjjHzw6qffYlPg7p5hob/9n8z9+nPYE1Xz862HPSGeuo+8D60fAYOvwPt7bQFI8iStCjl
      wTJNXF4PEwPnKWSzOLaNputIikxseISGzg4KmQw980oE0BoMUzpyhNlP/+2qqR0LYc/OMvd3
      n6Fw6B3qfv3XkL3eNX1G5Q/+4A/+YE0jXGfYhkVquLrDqSRJOMIhV8wT9AU4MzxALBGnt62b
      cCBEwSgyNj1OoVggV8jhdXtpiNSTKxaoD0cZmRojkUmiazqNkep2ikBrGH9LmFLsWezs+rC6
      CSuDq/Ne/O/+CNh2OfFtDYEy2ecluLmHaN8m1GwGZmZgcgLOnsGTzzPodpFeUAvg8fupb28j
      PTtLIBqhsauD9OwcoYZ6vKEQustFMBrF7b+cYnFfIo31v/8eUWMynjUxQfHUKbz33HOpn0Et
      uOkVQFYVZs9WVwQjhOD00FkQMDk7TUdTOyAwbQtJkqgLRssF2ZaJIisoskwikyQ5X89q2zZN
      0QZsx67aVKrb2oIr6KY0/iWEVfnKtyoUD3rD3Xju2I3vwQcQQmDNxCs3iySp3BvgqSepu3sv
      Hpylc24SCSLFEic8LsT8+9p8mnaovh5fKIim60RbmvEGgwTr6ghcIfzNc0m2fO2bUEMp5kLY
      s3MYw8N477uv5jSJmz4VQjiC888ep5Rce6d2wzTRl1hNTMtEVdQ1J2FJskTfB/eg6AbZE/8Z
      nPWz2WVPF74tv7foGZ1ikdLpMxRPnCAzcJrCxBiiWESXNXTNjezzoja3oPduwrNrF3rvJqR0
      Gr719VWDbM+1tfB2DY343ELw7n9/htDs+tC4A0R+6RcJvOfHtEWSJEsE2yLMrIMCLCX8AJpa
      +xa7EO6ID9Wj4ZTmVhT+iVgOn0cDBLIsMTSWoaPFjxAQDi7dlV1YaRA2SOWf1BEOo/lJXrMP
      cyJ8jJltMYqbC2DZeFWJ5kiYO7v2c3/3w4R89ZfHHB4ExyFbLOLRdZT5lTVVKODRNPT56rHH
      FI10fT0D8co5ilyqyrsmZtZV+AFSX/kqvgcfKGe+VombXgEAgl1RZk6OX6u+bDUj0tswL2gr
      r66W5XDszCym5dDa6GMqniedNTh4LMavfHw7Pu9SCnkxwABT6Un++e1/4PDY29jiirOADCkn
      R2r2DGdmz/C1I1/iod5H+dienyHoDkE6Mz9GmmyxRLpYIOB2E89kaQ6FOD8zwyP9/URyOT78
      +Ht4bfAcB0eGMFchpm0JhHiyfxvON/6wwu5nlcNJpci99DKB9z5R9b23hAK4gh58DUFysXW0
      qdcZiksl0F4OCEmKl3IQfmlFiIRceNwqmiozHc/T2xlC12RkRULTlrZ1JdkFksLrgy/zuTf+
      jpxRWZKgYZf44dlneWfsLf7Dg7/N9nl7XpVlZFmiORhiNJFAV1WS+TxD8Thbm5uJ6C5UWebh
      3n52tbZzaGyYc/EY6WIR2ymfH3RFpS0UZmdzK/2NTdhDw0xPrnJek+XF5leFFXD5N97A/8R7
      qjZTb/ozwEVkJ5MMv3Bt6cKrQcOONhp3l+MNwjHJnvxdhLl+hTxqaC9vOlv47IH/he3Utsa6
      VBe/veln2H2yArNm337YdceilxwhyBsGhm0hSxJeTb9kMgGkv/Ndkp//pxWH1draQNdwEknU
      1laEbWPPziLpOtbE8h1gJJdO+2c/U7VH6JbYAQB8zSF8zSFy15k4dimobo3olssRUUnWUP1b
      MBPr11HxTM7kc0f/rmbhByhZJf568Ev8d8/DtBRW8Kr4/dibNjMXizE+OkIykcC2bTweD3UN
      DXR0duHxeK5aja3JCuu2HYHW0Y5jGOVUCK0ZtamR7AoKIEoGVnwWraW5sjnmccsogCRJNO/t
      ZPC5E5da+NwoaLyjA9W1eGXSovetmwIUHYn/c/pNTHvtmbFZM8c/BM7yn933oSzRcM/QNN7S
      dA7+1V8Sm17anNF1F31bt/DAI4/S1bPpcop0bvWaYHM+kGeOgxIOYw4Pg6xgLFPUvxBOvvqa
      41tGAQDcIS8NO9uZPlxbbs1GINAeWVQAI4RgKpNmPOmhQ+/BY1TXDG4pvJZyiBXWrzDoeOY8
      xx/+OHfktsDQIGSzCLeb88US3zxxgnhmZeY9wyhx4uhRTh4/zp677uL9H/4oXq+3MkbqBRQt
      CxnsKrHTa0mNuGUUoFxIYhPtracwlyU9cv0L5fWgh9Z9PUjy5R8+XSzypcNvkTcN2j07+KBv
      CtmpnUHNcbXyUuLqdOO14nvnn2X347+PtGMXQggOvvYqz3z937Gq4BASjsM7b77JxOgoP/fL
      v4pSdzWNidbViRKto3S6HBWXVBWEwCkWkV0ulEikzKCXzSAME4RAUlWcUmmRsgAooeobZNz0
      CiCEoDAyTfyFwxTG4kiyhLu9Ac0VxLTXjz2gWqgenY4H+1Ddi02fkm1Smi8Ez4gQescvYI18
      BkT1PW4lvZ6Z0BNM5f5s2Ws8mhfbsTHsctwh7IlgWCXy5spxkzPTp8gbOXwuP0fefptvfe2r
      ODXm709PTfGP//tv+cRd+67+DKqK7HGjdXSgd3ZQOn0GffNmhFECWcbJZHFyOV2kPvUAACAA
      SURBVNT6epAlZJ+vTBKcSmMODV0aR4lGkYOBq8ZfDTe1AgghyJwYYuxffoBTuixARjyF7HGj
      bOvHltcniFUNVK9O0wOdjDPM6MQQiVKcol1ElmS8qp9w1MIo+nh80x14Ii3Y6m9QGP5cVakR
      srcLb/evMDz8zorX6YqLxlAjQU+IVCFJ0B1iJhvj3oYtnI8PMJxY2gQrWgVGkyPUS/V846tf
      rln4L2JmeprvHTvKw4qCtCBPyZycwpqOIfv9GEPDSC4X5uhImZ7F7cbJ5xGWjTkxgRIOgzSD
      nUxxpVHkvmP3j58JZBdKTH79lUXCfxFOoYg2OYH37t1kJq+dZ8j0WYz0j/HD6Wcp2MussjLg
      hTeSo5jq/WwL78a35fcpTX0DM3EQnOUPs5LqR294F3rje5FkndlcfNlrAUzbIF1KMZOLEfZE
      yBlZDLtELDu16qF5JjvNmz96lVJxfequT42N0ufz0pq+fIYQ+TyCMvX7arBWSJzzPfhgTc90
      UytAYXgaM7H8gcyIzdHeV4e3MUjs+DhiA4tGBIKpyCSnmk9iVEj8FC/GeG7s6xydfZMnOz5C
      XeencDU/jZk8hJ09i5EboZiL4fa34Ar2ofi3oAV3IamXSyENa+W58maOvFn2jiQLl70605nV
      EwhHRoc5c+pkRZ+lIgjBkaCflkx2XTtcurZtK7Nf14CbuibYyqxsxwrHwc6XqN/eyqb3bMfb
      WL2NWAlUv85o/xhHWw9jyNUnuE0Vxvm383/PaHYQWY+iN7yLNH0cPnaYw8ePcPjYIVJ2O1rk
      3kXCD+BSVybZqvfVXtB/7sTpFU0feUEGpiRJFUVhRxwbcdfemp/pSki6TuTnPlFzNuhNvQPo
      dStTlUiqghYuC4w74qP78W1kJ1PET06Qn1l7Ew094KZuSzOnvSc4Obs2np6iXeAbQ//KT2z6
      OYKmzbGX/juWUT4TFDLjHH/pDwhE+/EFO6CYhFIafA00B1uXHTPkDtMe7sClulBlhaivnsnU
      OE2BFjKlNAFXkJlcjInU0l6k9EQSF8uXH9Y3NKLpGpl0mubWVnLZHNlMGpfLvWyMQAhB8v77
      aJ5LYFxYWzUckkTk5z+J1t1d8xA3tQJ4OhrwdDRSGF06dO/v70CvC176W5Kk+YKUEMVEnuSF
      GbKTKYxcseJEOtWt4WsOEeqM4msOMZw7zxtDL63Hx6HkFPnuyFd5yKq7JPwXYZbSzE28iW/m
      FIwdKGd+qh42Nd+JLMk4S3Rpr/PVoykafleAkDuER/MihSTCngix7DR5I79sHz+v6sVje3FW
      qbh3bIeWtjaMkoHb40Z36TQ2NS+rAADxVJJd/+l3iP3xn2AODq36vSwJWSb8Mz+N7/HHb83+
      AJZlkU6liMdiJOZmyefzmKaJLEm43R4CoRANjY1EP3gPM196CSO++KDrbm+g5SMPLbk1SpKE
      J+rDE/WVa1izJQqJHKVkgexMmvRUAiNXRNFVAg0hAi0R3CEP7ogPV9CDrJbHNB2DFya/i7NK
      dmc1SBizHMqOEVziPSU9BvkF1W9WgdbJQ3T5mxjMXJ1mcGH2HBdmly5iXw1b63eQk9KUVlCA
      2XiZFDcWm8bv95PP5ZBlmdjUyueLfD6PEg7T9Pu/R+If/w+5l1+pivJdDoeJ/vIv4dm7d801
      GjeUAhQLBc6ePs2p48cYHrxAKplclX3B7fFQHwjT6Nfo8dVT39CIv6+d8F39KJ7V2QMkSULz
      uyhk8wyfOE/s7DiWcTnAIp2XCLVE2fzgDkI99Yvs3lOJo8yVVvbC1IJJr4ugvwGyl1mXvcEO
      6gKtixUAkO0iT3Tu5+9OfGPd5pclmae2f5Cv/uifV7zOXuDOTCUvExSXVqlCU+bdlbLXS/TX
      fw3fQw+R/ta3KJ44uWIppxwO4b3/fkIf+hBKaKklonpcdwUQQpCYm+O1l17k6DuHyK4SZr8S
      xUKBsUKBMeBIfoLuwCYequ8m4qrM/y+EYPDAGU4++zb2EiRbwhEkx2d564sv0Xqiiz0fuQ/N
      rSOEw/HEyj74WmHLMu67PkngwpukZs9RUDqo2/2rCJ8Aji2+WFK4f8v7eG7yOINzK3P6V4p7
      uh5ge9tOvuP1UlzCBdrW0YkkweT4OAAutxtJkigWCqiqiqppqKqKEIL0EkzTwdDls5skSbh3
      7cS1cwfW1DTFEycwBgex5+YQpkXRsUnJEvn6KE5nB7aqIr35Grruwh8MEqmrp66xGb3G7jnX
      VQEK+Twv/+h5Xnv5JYx1oPSwLYvzZ89y/uxZejZv5on3vZ+unk3LXi+EYOiNMxx75mBFZ4CJ
      48PYhsW+n32UnJNhOj++4vWO7WCWLFzzzBXFbAlFldHcqyvntGJz7+P/k7/+yqscPDWDc3KQ
      tqibX+2NsN2fuJxW034Pmq+RX33gt/h/vve7l1yetaLR38Qn9/0ikiTT0tZOYu7qlBJZlnC5
      3LR1lBkxDMOgs6ubQiHPzHSMzp5uioXCJQW5Eu2dXVe9JkkSWkszWktzOcCZSnLhzCni01OX
      rQDTKP8DCrkcqcQc48NDqKpKW1cPXb19uKqsCrsuRfFCCAbPnePzn/0Mp04cX7SVrheSc3Mc
      fvttSsUind09qEs0gsvEkrz1by8h7Mrtz9xsBtWlUajPcyq5sufHNCxmRxOMnZzEKlmMHB1H
      kiVmx5LkU3kC9ctTG1qOyfnjAb53cATbEThCkMqbHElFeeiePcSUJs567sLTdQ8eXSXkCdMV
      7eHt0TewakyJDrnD/M7jv3vJs2RZFiePHbv6QgGKqpRteUVBURQymQxz8Tizs7OARGx6ClXT
      yF0R4PL5/Tz5wQ+iLMOqZ9s2504e5+Thd8hlK7MGHMchlZhjcnQEl8eNPxCs+GxwzRXAcRxe
      eeFHfPXf/oV8Bemxa4FwHEaGBjl/9gyb+7fgWcAhI4Tg+DNvkZqsPmkuNZWArTIjhZXdeI7t
      kE8VCDb4SccyOELg8uokplJYJYuGruV7XJm2w5uvqRSKi5UzbzgE2vo4p3Qz4wQZTxv01XtQ
      ZInmYAv9Dds4NX2cvFHdd9tb18fvvOv36AhfpoAPRyK8ffANzCvYG0qlEulUikI+TyadJp1K
      lf8uFC6ZPaVi8SrhB7jn/gfYumNpOnTTNDhy8ABTY6PUUt9q2zaxyXLNQKSuviIluKYKYFkW
      3/jKl3np+R9uSOfA5ZBOpTh57Cg9vZsJBMuHJ6tkcvSbb9TELWqbFplwmoR3ZT4iRVUI1Pnx
      hjzUtUdo7Kkn2BCgubdhReEHcGyYGKhbkjmku60e2TOvzAK2NXlR5zNOG/yNPNjzCABjyRFM
      Z+Uku5A7zEd2f4xfuvfXCHsWc3hq89VV586uT6Wdx+vl4z/7SVxLsMvZts3RgweYm6m8yH45
      JGbjyIpCOFq3qhJcszOAY9t8/ctf4tDBa0/pDZBMJPiHv/tbfvHXf52W1jay8TTWFTlEiqbg
      2A7CKSun6tZwTHtJJSnM5GCVJoVmySSfKhJs8ONYDopWebKWqsLWrihvHl+8Q7l1lcd3txHL
      W0xMjrLFPIF4ZYxCegJRSCCsIjISH9Z9vMsV4LCZ56SZZ9IdIqf5kGSFgCtId90mdrfsYXfr
      nfhcy5ti9z30MKdPnGDowtoO2JIk8YGPfHTRAXghzp8+yew6CP+l8U6dIBgKU9e4NDfppee6
      FjXBQgi+/93v8ML3n9voqVZFtK6eX/7N36I4neXA559f9J476MXld6N5dErZIp6Qj0Iyiy8a
      IDk+SzFzOW/f7LMZ3rtyMcvE2WniI3PUdUQopIv4wh4kWcbtc1HIFGnqbUCWl16h3IqHDzf/
      Gn/0hQOMTJc9KS4VfmaHzXtDJ7HH3kBUkM9zCbKKiPSg9b0b19YPIIU7K7aTU8kkn/2bv2I2
      XrvL98HHHuOpD35oyTnTyQQHX3oBsUQwby3w+vzc++i7yhyly+CamEAnjh7h21//9xuii3uh
      kGdyfIwtm7czdnixACuaiurSKGULuHzz27QAX10Qq2RQyl52CTb1tDERHUOsYKtmZnMUsyWE
      Vbb9FVVm+vwMs2MJQo0BAnXLd2Ns8rRyf/sD3LO9jc46N7vEEX5C+RZ3pL+FiJ+GClkfLkE4
      SIU5nLG3MI99BXvqKHKwDcnftKoiuN1utu/cxejIyCJ/fyVQVJX3PPkU73ryqUUxlIU4deQw
      uez6M3qYpoHL4yEUiS57zYbvAKlkkr/6sz/Z8ANvtXj44ccx3snUnCG6+0P38FrkBaYKy7tC
      zaJJLpnHH50XdEmimC2h6gqaS0NRl0/gerj5CfY1Pog18Q6lH/0PnNg6ZmVehKSgbnkS1wP/
      ETm4ercW0zB4+YUf8cqPnl8yPnAlWtraePonfpLO7p5llSyfy/La899HbFCzDH8wyL2PvnvZ
      +Tf0DCCE4Dvf+PoNJ/wAr7/+Cnsjd0ANpbSyptDU18YO+84VFUBza4SbF9u8/sjqbMaqpNEf
      3IZx7MuUXvrz6lf7SiFsrNPPYA+/juvR/4K65UmkFTpharrO40+8l3333sfRdw5x6sRxpicn
      KZVK5Z5gsoyu67S0trJrz51s3rIFn3/lDNz49NSqwu84DkKISxFky7JQFKUiEy6bTlMs5PF4
      l95tN3QHGBka5G//8v+7IUyfpdDsa6JLXN0bYDV03rWZPR+5D9Mx+PzAp0kZ60v1d0dwFw+e
      O4F57KtcM7o7SUa78xO4HvyPSErllPOmYTATm2b0wnmSs/Fy/48FginLMr5AkOb2Dlo7uq6K
      2B598w2mJ1auac5ksiTTaVKpFC3NTZw+O0B3ZyemZRIKBomEV64F3rH3blo7rg6+wQbWAwgh
      eP65Z29Y4QeYzsfQmquLHHqjAbY/cec885mLx1qeWtTtZK0ICJU9b30b89hXuKZcj8LBPPR5
      it/7b4hV6oUvwiiVOHv8KCcPvUk6MYssX10T4DgOmVSSgRPHeO355xgdPL9oxS9USGWSSqfx
      +XwMj4zi9/vIZLMMDo1w+uzAqvfmV6g22zATKDY1xdlTpzZq+HWBEIJcpER3QzcTx4ZWvd4X
      9rHvA/tQkzns2QyoCj3+DvbXPcgbsy+v+XlU2+bRE2/hmrl+tC7W2e9RFA7uJ/8ISV1+J8im
      0xw5+Dr5CjvFQ3m3OH30MIn4DDvuvBtFVTHN1bmMfD4v/b29yLJES1MTxVIRn9dLS3MTrgpy
      gFaaY8MU4NCbBzdq6HXFqZPHef/vfoT6niYGXjxGIXX16qdqKj3djXR3N6FNJhYnP0uw39uJ
      6d7JIXG85ufQUXj87DFarqPwX4Q18Bwlbx2ux/7rkmeCXDbDOwdeoViojc5lemIcx3HYve/e
      iuz48tmi/ByqquKe7xEWqpAGcaUdekMUwDRNDr/11kYMve4oFgqcPnmCvffsp2PPJmaHY4vc
      nXLRIGzauJYz5QRIOYMHcltp9UR403+GabvygI6EzPbwbnacepXwxOrb+bWCeeTfkHwN6Pt/
      eZGQlopFjhw8ULPwX8TM1CSnjx7G7fZcZaKUDIMXX3mVHVu3ksvnURQZTdPwuD1Mx2K0tjQz
      Oj5BS1MjhWJpnpbRTTKZoqe7C/cVu8JyB2DYIAWYHB8nk1kfv67L5cIwjEupE26PB8s0qyJo
      Wg0Dp0+zd99+VJdGU3/bpddFycQ6fAGM1eeSkNhUaKbL1c359jRHkoeYzo8vWyyjyy56An3c
      WX8vjRNnKJ76/rp9nvWBwDjwaZTWPagd+y+9Onj2NLl1+m3HhwcJhq9uoerSdbo7OkhnMpy7
      cIGe7m7GJ6ZwHJuuzk5Onx1AlmSGRkaZjsXYvnUr2UyWM+fOoSgK/Zt7F40XWCb6DBukAOOj
      67eN+wPBck5NMEg+m8MfDJBKJGlsbmLw/PklE66qxcjQIEKIRSudEAJnZAaW6ey+HJRkkW1N
      PWzrvZO0kWR87gJjZ46TS82huFzUb+qltaWXZk8bHtWLMHLkXv5zWOco6LrAsSi98EcoP/0v
      SKobo1RiYnR4XafIpJYOrPV0dyHLCo0NDQQCforFIpqmoakqkXCYQ0eOsH/vnWzr78cz37m+
      vr4Ov2/xaq+qKsEVAmEbogBTlbIAVwDbsVGETHIuQSAYwDItNF3H4/Xi8/vXRQGymQy5XA6/
      f0FOjGnjxKqLel6EMzGH0hRBnzbRv3iOtqk8UP6RFN8kofd34t5f9j4ZR76IWKYo/UaAEz+L
      eepb6Ls+Rnx6CnuFnTebzeGf7wXmOA6ZbA6/z3vJf78UhBDIioJzRUr8xUS8uvkm2wu794RD
      QR5/+KGrxlrKHdrc3rHi/BuiAMkliijWY6yLNaiwvruMaZpk0+lFCiCyBViiQqwSiFwRcybJ
      6D99H3Nusblg5wpMfu1ltJAf/6Yo5uGVyw5vBBhv/SPatqdXzdScnZvj/OAgfr+PRDKFJEk0
      1NUxMjbGA/fes+yBNxKtZ3Zm/dq7XoQky3T19q940F53BRBCrGlVDkeiGEZpyeixoqhIUnl1
      kSTpUiGNoihrLqrJX8E6JvJXmz4Do8M0RqLYjoMjHIanJuhsasEwTVrrGy9/0Y4g+frJq4T/
      0tiWzeyLR3BZFiK7/j/8ekMkh7GGXiWfWyW1WFWpr6ujUCxg2zaappFIJklnsjiOs+xKHIpG
      Mc0S6SrzjFZDZ08vHt/yB2DYoB1gLQfUhqZGJsfH6ezuIZVMEI5EKJVKmIaJ2+PGtmx0l45t
      2yiKQmJujs7uHgbPl9kPak27uLLoY6kglGlbnBg8h0Bg2Ta2bXOykOeds6f41Ps+QnhB2L8w
      PnPV/QtRnJ7DOPr8itfcSLBOfRPT+9SK17S1Xs4n2rygEvWOXUsXwFyEcBy277mbt159Ecus
      niR4KYQiUXq3br9O9QBrCIzmsuXVonvTJmJTUySTCYQj8Hg95d63toXqqAQCQRqbmwmGwhTy
      eZpbWlEUhYEztTWfli72ojp9CkaGkRqu7gDfWt9Ia30jIBiemiDkC6BrGi5Nx6O7Fg6G7Fk5
      nUC2Uzgzx9YxhryxsEYOIG9+5KrXbdtGkiQsy0bXayMilmSZQCjErrv2c/TNA2vezX2BIHfs
      v3fFNOiL2BAFcC9R8VMppiYncRyHtw++QalYvETNd1GThRAIIVBVldGRYYxSCU0v7whrSWty
      uVyQTsHBA2DbSLMJaNu1aCNYuMKHN1+m5SgrxQK4Nfw7N5E6MbTsfG7vDNIKJLjVwHYEQoCq
      lL8jwxJoChXn+1cEI4ueGQKtc9HLyVSKRDJJLl9mhGhpaiSZStPYUE86k8EoGQgELt1FOpOh
      q6MdzxWF6xf99PVNzey9/yGOvvkGpWJtcYZoQyM79+5bsupsKax7LpAkSfgDtXG26C4XwnHw
      +/2YpkkwFCqzBWgaLrcbTdNQFBWvz4dt2+RzOdwezyWzR5Zl/KtkHy75zLKMLxAAVQN9fuX2
      upEiy1dKrQS5KUJoTy++/qUT7dSQj/Cm9YtjZEoO52ZKvHYhx2TK5HsnM5ybMTgxWSSWWb95
      fLmlC4BUVaVQKHL85CnODJynubGRQ4ePMDMT5/Cx4ziOIJfPc2bgHEMjo1fdH1zgvQlH67jn
      kcdp7eiqSoFVTWPLzju4894HKhZ+2KAdoL6xobb7GhrIZjLUNzRQKpVwudxkMxncHg9t7R3k
      8jnk+dB8cf6g1djUTGxqiqaWForFAvHYyrb3UnDpOv5AgAvZLC9EokwUxgjoOvuVIncqEkoV
      rBF4XchtUSRNpeNn38P0dw6QPnoBu2QgKQreriaan74f8fpLq5AOVodkwSHsUTg5VSLolkkV
      bM7NGIQ8Ck/tWB9S4Dotx5gkLdppw+EwkXCY1pYWtvZtxustN8fraG+npbmJTT3deOYFsrG+
      Hq938ervCwTwXrFoudxuduy9m67N/UyODTMzObkkQ4SsKASCIZrb2mlu76yJG2hDFKCltfoU
      44vw+nzIsoJlWjhOHscp54FLCzINZUVGkiQy6TQNjU1EolFcbjdz8ThNzc0k5lYuVr8S0YYG
      vn9ugH88+DqFi4ew0WG+PzbC+xo6+IVIF2ol1rquom5tR9LKX6vq99D6sUdpfHI/VjqP4tbR
      IgGQBLn0ypxC1SDoltnbUSan6qnXy8wRLpneBhdubf3MIK+TIlJXz9wCd/TFTvK6LKOHL0dc
      e7rKptLCtITQEmxu7d2blq0U8weD9G3fRe/WHRjFIoV8DtM0y5m4Lhcerw9N1288btCunp6a
      7kslkzi2TSqZpFgolMlsg0Gy2SznBwZwbBvHcVA1DVmWEUJw4dwAhXweWVFQVZWZWPVuxbzX
      y98feBXjisOXIwTPxEbwe738dLh9xaiwFPSi9Lci+RZvv5IkoQV9aMHL7jhh5qFK2pKVIEsS
      uloWAk2R8Mw309bX+dcVpQy9/VtIzs2uuWMMlFf/ts7uVa+TZRm314vbu3oxUbXYEAUIhkI0
      NjevSpJ6Ja6MHwghlqxBXcrN6tj2VQJcCQRwXmLZewXw3alhnr5vP8GMgRNPIwolsB1QQGg5
      CBmIcBZhxJFEEFlvQNIjSNIyEUjbRNjVufsODObpiGgoMgRcCkNzBumCTUdEJ+pTKJgOhiVo
      Cqg8cyJDU0Blc4NOyRJEvAqDswZ+XcalycgSZIoOJUvQ16ijLFOYfxWsIqFwiK7ePgYH1kaV
      Issy2/fcVZGnZiOxIbPLssyuO/bww6nvbcTw6wqvz0/M54MV8tqzpSKxYp5wWxNSSxg7ew5z
      9iBW5gTCTkHGgUUmqozsakAN7UGL3o/iabt60Co8VkIIhucMUgUbry6TLTn4dAnDLr8+EBOE
      vQoHBvP84v2ReSY5GJw1GJw1sWxBa1jjcLKIIkHYoyDLEpoC9X6Fen+lYiAQjk1rSzO55Byx
      merPW1CWjx17961YrH6tsGHqt3f/Pbzwg+9vCO3hemL33r1MO9aKCiBJEpqiYBcnKI79G3bm
      FCtXazk4pWmM2LMYMz9EC9+Nq/WjyPr8Dy6roGhQ4SZgC3hyewDLFmiKRMkWXJgx2NKk4dFl
      bKdsrjmiTJD1+BY/LkVCUDaJwh6FybTFg70+4lkLry7j0STCXgWXUrn9LGSNiaNvkI3HcEsy
      dX4/c7liVe5n3eVmx513Ude4OhvFtcCGKUA4EmHHHXdw9NChjZpizVA1jQcffpipM6e5MLs8
      501TIECdcZjc2NfBqbJhnLAwEwewMqdwd/48Wmg3qG4k3YsoVhb6V2WJkGexOdWwxKpd5yu/
      FnRfvnZ3W9nr0hktu3c7IrV3zbQchex8zo4QNmFN0HP/Q5w/fZLECt8flOlRWju66O7bgrtK
      AtuNxIYpgCRJPP6e93L88OF1OTBtBPbevY+6+gY+pLt4dfA88SXSKFRZ4uPtMzD1Imup0RVW
      isLgpxEdn0SvewA50Iydnqh6nNNTJTy6xGTKoq9R58REkeaQhizBZMrCo0mkCg6qAh5NZmuz
      i5cGcvQ1uohnLbqiOscmijyxzV+57T8POdiGJCsIZz4HS9MJRevYuu8BZmaTjI+PU0gnka0i
      bgVUXcPnCxCuq6ehuQXd5bohVv2F2FBiLK/PRz6XZWzk+pf5XQmfz89P/dzP43K78ek6O1ta
      ORefIZG/HIEMezx8qq/E/f71SllwsNLHkD0dkE7gTC3BvLwKPJpMwXSI+BRUWcK0Bb0NOkVT
      MDRr4tZk/C4ZXZWQJQmvJhFwKzhC4NFlfC6ZsFch4q2MVmQhXDueRuu+HyOfxdZ9xKNbeTtm
      c2Qyx1BGkJD8ZNz1ZH3N2OE2Gtq66N3USV1dFFVVbzjhh2tAjFUsFPirP/uTJXnmrxckSeKj
      /9dPcdc99y56vWianJ2ZZiKVJuh20efP4xr/XyDWJ2Xh0vxqEN3agfHC/6z63tNTJXKGA5TP
      A8mCQ9AtU+dTiGdt2sIaqYKNIkuoMlgOJAs2HRGN4xNF6n0qedNhX6dnWVrG5eB++i9Reh7j
      xGSGY9N5TGf1+3VF4s42P/0NHuQfRwUAGLpwgb//9F/fMAfiO/bexcd+9hPLBmAAhGORP/en
      2Ln16bpyJRS5DeeFb0CNXP7XHJoH96e+y6vTKsOJ6puZ9ETd3N8VvJSvdKPgmvQJ7urp4QMf
      +YkbYgts6+jgQz/5sRWFH8BKH1tV+B1HYC4omjHMyhPybGcSAhvTt3gjILfexWs1Cj/A4FyR
      14fTODcYT9Q1iUJIksT++++nWCzw3DPfvqa9ARaiuaWVT/7SL6/qhRBCYM6u3vrUMG2GxjLM
      Jot0twV489gMW3vDyLKEz6PS1rRSMp2DaAwjpdaXVW6jMBB9nKEahf8iLswVqfdpbGta/4hu
      rbhmneIlSeLhx9/Fkx98etXVdyPQ2t7BL/zary/LT78Qws5iZSuLdBaKFtGwmyOnZwn4NFIZ
      g+Nn5zh4dHVqFKmlA1bg5r9RUHA3ccp37+oXVoDDE1mK5o3jFbwmZ4CFEOL/b+/MY+M4zzv8
      fHPtvTyWpEiKog6ykujIkiipSizHOWw3sWvD9VXDbtoGKBDECIoUbgq0QIq4aVGghQukDYIc
      KJKmBwLUTtw4DhDbseta8aFYliWbsmXJpEhaoiiuKGqX5B6zc3z9YyVZNG9qd2cYz/MnMZx5
      CX6/+Y553/cn6TtymJ8+9uhV95ZZKtt7d3Hn79+35PNne/Io+YF/XvS6coGORAhwHEm+YBOL
      apglB01ViIQXm2AV9PMp7L4nlxSXVxzr+iLH2u+r2P1618bY3uYP4dc8EUMIwfbeXbS2tfPE
      Tx5jsH9lRs5LIRyJ8JnfvZ29+/Yta9ZxikvLYRJCoF9MQtNUCBnlD1DGkp1gXLRrb8c5eQCZ
      W1laQdVJdjDS8XvM5wWem8wQS76fzz+dmcCIRDFC8+fkD18w2dYa88WpkGeZSC2trfzJg1/i
      yGsHefapXyzbeGEhNE1jx+7dfPrmz9DY1LTs35f24o2fjp/M8N7oFNd0WgdnlwAADKVJREFU
      NzJydpqmxgjJuE6+4DCRLdLdWUd2usTaNQsXZUtNYFz/ZcxnvkZNm+EuBaHgXvfnTBfmz7PP
      jI+RPj2EY9s4toXrOsTqGhg69ib7br0HTZ9dGnohb1NyJGHtQywAKHdz2P3Rj/GRHTs5cug1
      Dv36ACOnZlcMLZVIJMK1O3u5/lOfoqm55SpOnRb/vVzBoreniZcOn6W5IcKp0emLHSskmqpw
      sC/N8cEMX7ivB1VdePbRe+7AGXgee8BfRfLa1tuZWvdJ3OPzv5w03SgPcikZOz1EJJ5gOjOB
      Y9tYpdKcApDAtOkQXsAgpFbUfA+wEI7jMDY6yrGjfZwc6GdsdHTBLg+aptGQStG5fgObe3pm
      WaGuFHPsKcwzP17wmnzB5u3+CX5rQz0nBjNs6EgwOV1C1xUakiEmpy3S5/Ps2Nq04AenyKY/
      RYluwcmNUfqfLyEz/vhqrrRcQ/Te73PWNHjmRGXblQB8dksDrYml+xBUC18J4EqklFilElOT
      k2QyF8hNT2PbNopQCEciJJJJ6hsbiESiFT9VsjKHKAx+p6L3nBvBBNcy0Pc4rmOypmEzG0be
      QVSwWGZFUSVaid77A5T6TtLTJX7xzuyj2txkhmg8SX568vIewLbKS6CF1v+XuK2nkabYyhPz
      KoW31QgLcKnsLdXcTKp5ZTXGK0WNbqR8Qjxz53diKMPJU5MgIdUQZsfWFC8dOktne5z0+QKG
      rpKZNLnxurW8/PpZNm+s5/W3xtnZk6J/eJLrd7fOuF+xZHG874e4F78Gj6QP07D9AeqP/hyK
      2Rr9tTMRiVYid30P5aJhdsxQUQS4H3hNHn/9FdZ0biJ9eohkYzONLW309x0ilqwjGk/SuGYt
      UrqkTw+xsWcnmvH+214A8dDSLWOrifeLMB8i9PpywtoHiIY1tIvredt2MXSVtuYo4xeKnJso
      ki/a1CfLG8bO9gS5vMVUrsSFrEmqfvZG0hb1lwf/JXKRBBdu+Rql+PI371eLkuomeve/oqbe
      764c1RWScxznNrV3MnLyOLFkPQN9h3jzlecxwmFCkRiaESI9MsS5M+9x7LWXyIzPLFOtj2gY
      PkmJ8O0SyGtK4y9QPPWfM37WP5zFlRLbloQuGjacPpujqzPJuYkiHa0xslMlHFeSnSrRWBci
      V7BoaYxwfCjLnm3NxKOXpn2B0fkgB57+KoXpclq0UHSKe+5nQJmiVUa4c2AQd/jlmvy9WvdN
      hG56GCU6u0rrjTPTHDkzc1nmODbyYotKs1BAD4UoFQuEo3EQMDr4Lq0bujHzOSKxBMoVbRF7
      18bZ3rbw6VitCAQwD9IxyR3/Oq5ZOffyK1HjW4l2P0Qu+x4nj/wAuzTNuq33cEikeevCEdwS
      dLCB5ref5LcnBlCq1D5dRJsIffzP0HruQChzL0sKlsNPj56ntJz2MPNgqIK7tjUR1v2x+AgE
      sADlzfB3qfj5vDCIbf5L1Ohs58KCnedXp5/jv176IfbF7Nmb6zq437Vxhl+unI+AEUffdg/G
      7s+jxFsWvfzYWJ5XT83uzbNcPtqZYGuLf3KBfLsJ9gNa3S705huxzj1XwbsKQu13zzn4ASJa
      lPyUeXnwAxwoZnngru8SPXcc6/B/YJ86iFzhJlkk29E23IC6fh9IiTP8CrZdLDvJayEIJRCx
      JpRYCyLeglDLS7YtLRHO5SwGJ5ZZEnoFXakwm5v9Uw4JgQAWRAhBuP1eZGkCO3u4Ivc0Wn4H
      o/nGBa9JhGamSUdUA23wedT0m6jxeuQ1t+CEUzhWCefMEdzsKWT+/OzaAj2K0MJIuwhOCVQD
      WZzEOvo41pv/vXCgigZGDKVxE2rbDrR1e9nXtgMIr0gEXakw161P+iL94UqCJdASkK5FceQx
      rPHnWfFySKiE2u7EaPnsgm7sAAWrwDf+7x84OvoGET3CF1t72MsHBrdQ4NrPIRu7wbHALiBL
      eaRdANvEOXsU+91ncEaPgFWhpEM9hrJuL4NNN9Fn7KIkFm9FaKiC3R1xups+xBVhvwlI6WJn
      Xqd45sfI0sIdED6IEllPuOMB1FjXktMzbNdmNDtCXDOof+PfEXOZV6e2wPbPvR9jMUvp6ONY
      R36EnKqcTdVcmEYjQ223cWb9PWRkYsZrQRHlo86NjWE2pcJEl5wcWHsCASwT6RSwJl7BmjiA
      kx9i3jRJoaPGuzFSn0Sr24lQVrjaNKfgwDfmLp1MtMOeB5HmNKW+x7Be+zdkoca116E63G33
      Y237Axw9gaoIYoZCWFN8UQG4GIEAVoiULtK6gJMbxDXTSCcPSISWQAm3oUY3ILTk1Q8C14GD
      34b87HRp2b4HW4tjvvAIMrvyJMJKIJJrCV3/ZbQtty66xPMTgQBWA+PvwFuPzpgFJIJiZgy7
      kkejV41A676R8M1fR0RmOzb6kUAAqwEpYfIUjLwK5iRO/gKFoz8rn/z4EFHXQeTWf0Rt2+F1
      KIsSCGCVYfU/S/Hpv4bS1fsjVxU9Qvimh9G23ubrvUAggFWClBLr7Scwn/vb8pn+akCohD7x
      F+i9f+hbEQQfwlYBUkqstx7HfO7vVk8jLQDpYO5/BJDovX/kSxGsnu36hxi7/5eY//v3q2vw
      X0K6mPsfwX77Z15HMifBEsjnOKNvkP/JF2CuD2GrCVUnctf30Nbt9TqSGQQzgI+Rro350jdX
      /+AHcCyKT/0V7tTybLOqTSAAH2O9+SjOqV97HUbFkNNpis/+zWV/AT8QCMCnOBODmC/+i9dh
      VBxn6EWsvoU7btSSQAA+RLoO5v5/Asvb7hDVwnz5m7i55SUUVotAAD7EGXoRZ3Dx7tSrlmKW
      0ivf8qxL+JUEAvAZ0rExD3wb37VJrDDW208gM8NehxEIwG/YQ7/CHXvL6zCqj2NROvh9r6MI
      BOAnpJRYR37kdRg1wzrxNK7HCX2BAHyEOzGAc/pVr8OoHVbe8y/EgQB8hH3i6XIBzIcI652f
      e/pdIBCAT5Cug93vr/botcA9dxzXw81wIACf4GaGcc+/63UYnuC8d8CzZwcC8AnOyCEflTbW
      lkAAAbijfV6H4BnO2FGkY3ny7EAAPkBKiXPumNdheIacTiPz3qRGBBVhfsAuIj1IEz52toiq
      CNrrNF4bLtBRrxMNKWiKoCVR26HhTgyiJNpq+kwIBOALZDGLLC7uTFlpipbEdl3eOWvSmtQY
      nSxXnKWnbO7pXdxQvJK42dM1fd4lAgH4AFnMgqz9WfimJgNNEWxqchk6X+IjbSEmiy7rGmrv
      3SU9yg4NBOADZKHyLoxLoS5S7tkZCymkYuWh0OiRcYs0az8DQrAJ9gd2hbo3z8OLAzkyBYf9
      75brC9JTNkVr/iPXsUkb03aZyNm4tUpZrlQH62USzAB+oMpjTFcFrw7lCWsK33phnLV1Oq6E
      xpjKibTJhkYDVRGcHDfRFEFXs8H4tIOmwJqkjuNK3hgp8rENUXZ1VsngwqNvIIEA/IC2eJ/9
      q2FjyiA9ZZMMKygCEmGF9nqd9JRNSBN0N4eYLDrEDIGuChJhlWtaw0yZLgXLZWPKQAINsSq2
      OdcW9xauymM9eWrADIRR3YV3S0K7fKzZ2fi+X29zXJtxTXfzTCE2X2FU8/Gu6sYojHhV7z8f
      gQB8gIimqnr/0azFsYtHndmii65AWFfoajLY35+jo15nPGfTltQZm7L5eFeUg8MFupsNDp8q
      0hRXcVyqt/wBz7pJB5tgHyBCcajiLBAPKbQkNBqiKmsSGnURFdOWOFIiBJi2JD3lYGiCwsXN
      cWtSw9AErUmNntYwEaO6bQ1FXUdV7z8fwQzgB4wEItqELFWnC8SZrM1U0SFnuoR0gWlLQprg
      bLa8B2iMqZQcnaLlUh9R6T9XIj1lU7AkDTGVvOUyfN5ifaNB1KjOO1NpmNs1s9oErRF9QuHJ
      h7D7f1mz5136t3+wYa2UIJG1NbTTwsQf3I/Qa+8fHCyBfILSuq2mzxNCzNmtWQhq7uaotvSA
      5o1/cCAAn6B17PE6BM9QO/Z41jo9EIBPUJq3IOItXofhCWrnPs+eHQjAJwgtjLbxE16HUXNE
      vMVTL7FAAD5C23yL1yHUHK3rJoRmLH5hlQgE4CPU9l5EvTfHgd4g0Lfd5WkEgQB8hNBCGNvv
      8zqMmqGu24vSvNXTGAIB+Ax9291VT43wBwJj9+c9d5UPBOAzRCiBvuuPvQ6j6qjtvajrvTv9
      uUQgAB9i7HwAUd/pdRjVQyiEbngIoXifiRMIwIcIPUrohq8A/vPVrQT6NXegtO30OgwgEIBv
      0bo+/Rt5LCqS7YRu+IpvTLMDAfgUIRTCN34VUbfO61Aqh1AJ3/wwItLgdSSX+X+82jyBt8NE
      VwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Recovered cases in india1' width='192'>
      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
      oBkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 10' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 11' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 12' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 7 (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend Line' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAULklEQVR4nO3deXCcd33H8fdz7L0r7UqyJNuJJd+JE2OHQAJOyFFucBISOgkZYKCkhWnh
      H9rppIXpMaWdzpR2pse0pNN2GBpCh9shaUKAksSEDOSAOInv2IksybKu1a72fq5f/7Bl4vha
      HXs8er6vGY9X2n12v/vo+TzPPs/z2++jKaUUQgSU3ognlUwJv2hIAIrFYiOeVogl15AAiNYa
      Hj72ht945POz4FYYHp1i+Njw6XvKM2NMF20A8vl8E6tsD2arCxBLb3RkmL6uFPd/43us37iW
      zu4e9r98iDtv/y1GRqfAHuPAi3tJdMaZmRwmfemVHD58mBhl1g0O8vLQFJ/4yB3oWqvfSePJ
      FmAZ0j2bAwcO07tqNZ2ZDNPZImtW90IoiVMeI5buJDczi6HrhOOdVEolVvX2sm79evRwjO1b
      ryAAyz4AWiOOAhUKBVKp1IKmVUqhaUGZ/a3iMpuv0tGZaHUhLdd2WwDZgW4GQxb+U5qyD3Bi
      dAgVSlDNT5PqXsH0xATdPd1kcyU2rB9AlzV+wx0ffg1lxqkVpuno6Wd6/ATdK3rI5stsXLcm
      sFvdpmwBHGXgzI4TSvdTKZVIp+Jk8yXSqRA122tGCYGXTqfR7VnCXZdSKRXpTMXJzlZIxU1s
      N7jnbZoSANcq44Y7KE4O4zo2J6YLJCIGE9NFwmbbfQpbloaGhvBCCQrjr+JYFuO5EvGwRjZX
      wjSCufaHNtwJXsy0rTA3+/z0EcKPBxoaVbOsfhepUqngum6ry5gXPx5oaFTNTQuAcm0OHzzA
      1EyOoVeHaNYi49RK7N+/n/xsgaFjo0161cWZzU5y4OAr5HLTHDx0hPbfS1KcGD3Gq8dGmRgb
      ZmhkrNUFXZRSHq++crB5AcjnsvSuXkt5dpZENNy0P+r4+DQbN28gnysQCfljg5crVhi8NEOl
      ZhKLhGj7XVTlYXkGIeUSicUplcqtruiiHGuWSGpl8wKQSqY4PnyYiu0wNn6CXK7QlNftSqc4
      sG8fLh7Hjx+nUK415XUXIxY22L/vKIXCFBXLQbX7JkDTUXaZE9kc5WIR0zRaXdFFmaEkhezw
      yZ1gpdSSDmEuFoskk8mmT9sKlUqFcDiMYbT/H32O3+YxNK7m0yfCyuWl22xVq1V0fWEbl8VM
      2wrVahXHcXwVAL/NY2hczSacPIS3lOlSSi34+RYzbSvouk44HMY0/TOw1m/zGBpXs79WA0Is
      MQmACDQJgAg0CYAINAmACDQJgAg0CYAINAmACDQJgAg0CYAItLrO3yulcBwH0zBwPA9D01Ca
      Bp6HpusoQEOhabrvvmkkgq2uADjVEoePvEIy3c/01CTJuInr6biORTgUY7ZWIaoq9A2+ie6O
      CIsZXbrUI1Mbba5Wv9Xsp3qhcTXXtwXwXGIdfSQjGpHVq6mU8hiOBdEO3GqNmOHhqAga4Hke
      Sik8b2GD2BczbSt4nofneb7a8vltHkPjaq5vCKNuglfDI0G1UmZFTxeuFsarloiuXIWmHFwF
      4VAYw9DRdX3Bw4MXM20rGIbhu5r9Vi80rua6AhCOJVg7eLKTWM/r70jETt0ILW1VQjSJHAUS
      gSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgVbXUAi7UuTI0AiZTIZ8sUpn
      TMcijFvJE0t1YdkWIWyS3atJRv3TIU2IupZWMxKjIxmnUKrSEdYpexqmPYuZyFDOZclbFmFV
      JZTsIxbScF0Xx3EWVNBipm0F13V9d4EMv81jaFzNdQWgnJtkMl+hpzNOtmzREdGwjRhufopY
      sov+eJmy10k4ZGAYJ/8ttFfmYqZthcW+31bwW73QuJrresZEVz/buvoBWL3kJQjROrITLAJN
      AiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACTQIgAk0CIAJNAiACrb7muLUyR0cm6IhoTOQq
      dMQNbGXi1kpE4x2Ua1XC1OhevZlMMtzomoVYMnUOh46TikdxrTKObUMoQcSuoKVXYBfyuHaV
      Ki6e650eHizDoduX3+YxtHg4tFUpks1m6enpojNtkoqY2NEe3EqeTN9KeqhR8wwS0ZAMh/YB
      v9ULLR4OHY4lueKKLQD0nXFP16n/U0talBDNIjvBItAkACLQJAAi0CQAItAkACKwPM+TAIjg
      mpyclACIYJq79rUEQASSZVlMTExIAEQwjYyMMDAwIAEQwaOUQtd1MplMfUMhPNdmeqZAOhVl
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Trend Line (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Trend Line for India' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
